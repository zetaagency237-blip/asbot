#!/usr/bin/env python3
"""
Test script pour v√©rifier que le fix de notification fonctionne
"""

from notifications.admin_notifications import notify_admin_product_interest

def test_notification_function():
    """Teste la signature de la fonction notify_admin_product_interest"""
    import inspect
    
    # Obtenir la signature de la fonction
    sig = inspect.signature(notify_admin_product_interest)
    print(f"‚úÖ Signature de notify_admin_product_interest: {sig}")
    print(f"‚úÖ Param√®tres attendus: {list(sig.parameters.keys())}")
    
    # V√©rifier que la fonction accepte les bons param√®tres
    expected_params = ['context', 'user_info', 'model_name', 'model_price']
    actual_params = list(sig.parameters.keys())
    
    print(f"\nüìã V√©rification des param√®tres:")
    for param in expected_params:
        if param in actual_params:
            print(f"   ‚úÖ {param} - OK")
        else:
            print(f"   ‚ùå {param} - MANQUANT")
    
    # V√©rifier qu'il n'y a pas de param√®tres inattendus
    unexpected = set(actual_params) - set(expected_params)
    if unexpected:
        print(f"\n‚ö†Ô∏è  Param√®tres inattendus: {unexpected}")
    else:
        print(f"\n‚úÖ Tous les param√®tres sont corrects!")
    
    return len(unexpected) == 0 and all(p in actual_params for p in expected_params[:3])

def test_callback_handler_import():
    """Teste l'import du callback handler"""
    try:
        from handlers.callback_handlers import button_callback
        print(f"‚úÖ Import callback_handlers r√©ussi")
        return True
    except Exception as e:
        print(f"‚ùå Erreur import callback_handlers: {e}")
        return False

if __name__ == "__main__":
    print("üîç TEST DU FIX DE NOTIFICATION\n")
    
    # Test 1: V√©rifier la signature de la fonction
    print("1Ô∏è‚É£ Test de la fonction notify_admin_product_interest:")
    notification_ok = test_notification_function()
    
    print("\n" + "="*50 + "\n")
    
    # Test 2: V√©rifier l'import du callback handler
    print("2Ô∏è‚É£ Test import callback handler:")
    callback_ok = test_callback_handler_import()
    
    print("\n" + "="*50 + "\n")
    
    # R√©sultat final
    if notification_ok and callback_ok:
        print("üéâ TOUS LES TESTS PASSENT - Le fix devrait fonctionner!")
        print("\nüí° Vous pouvez maintenant red√©marrer le bot et tester:")
        print("   1. Aller dans /produits ‚Üí Pochettes ‚Üí iPhone")
        print("   2. S√©lectionner un mod√®le (ex: iPhone 17 Air)")
        print("   3. V√©rifier qu'aucune erreur n'appara√Æt")
        print("   4. L'admin devrait recevoir une notification")
    else:
        print("‚ùå DES PROBL√àMES SUBSISTENT - V√©rifiez les erreurs ci-dessus")
    
    print(f"\nüìä R√©sultat: {notification_ok and callback_ok}")
